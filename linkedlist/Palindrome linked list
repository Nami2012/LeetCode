/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode *slow = head;
        ListNode *fast = head;
        while(fast != NULL && fast->next!=NULL)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        slow = reverse(slow);
        fast = head;
        
        while(slow != NULL)
        {if (slow->val!=fast->val)
            {
            return false;
            }
        slow = slow->next;
        fast = fast->next;}
       return true; 
    }
    
  ListNode* reverse(ListNode* head)
  {
      ListNode* prev = NULL;
      while(head!=NULL)
      {
          ListNode* rev = head->next;
          head->next = prev;
          prev = head;
          head = rev;
      }
      return prev;
  }
};
